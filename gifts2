def distribute_gifts(n, m, tiers):
    from collections import defaultdict

    # Step 1: Group guests by tier
    tier_dict = defaultdict(list)
    for i in range(n):
        tier_dict[tiers[i]].append(i)

    # Step 2: Sort tiers
    sorted_tiers = sorted(tier_dict.keys())

    # Step 3: Allocate gifts
    result = [0] * n
    for tier in sorted_tiers:
        for guest in tier_dict[tier]:
            if m > 0:
                result[guest] = 1
                m -= 1
            else:
                break
        if m == 0:
            break

    return result

# Fast Input/Output for large data
import sys
input = sys.stdin.read
data = input().split()

# Parse Input
n, m = int(data[0]), int(data[1])
tiers = list(map(int, data[2:]))

# Solve and Output
output = distribute_gifts(n, m, tiers)
sys.stdout.write(" ".join(map(str, output)) + "\n")
